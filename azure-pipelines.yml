trigger:
  - master

pr:
  - master

jobs:
  - job: build
    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-16.04'
          cmakeGenerator: 'Unix Makefiles'
          buildDistPath: 'build/Release'
        win:
          imageName: 'win2019'
          cmakeGenerator: 'Visual Studio 16 2019'
          buildDistPath: 'build/Release'
        mac:
          imageName: 'macos-10.14'
          cmakeGenerator: 'Unix Makefiles'
          buildDistPath: 'build'
    pool:
      vmImage: $(imageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - script: |
        wget https://github.com/Kitware/CMake/releases/download/v3.15.5/cmake-3.15.5-Linux-x86_64.tar.gz
        tar -xvf cmake-3.15.5-Linux-x86_64.tar.gz > /dev/null
        export PATH=$PWD/cmake-3.15.5-Linux-x86_64/bin:$PATH
        echo "##vso[task.setvariable variable=PATH]$PATH"
      condition: eq( variables['Agent.OS'], 'Linux' )
      displayName: 'Install the up-to-date version of CMake on Linux'

    - script: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test > /dev/null
        sudo apt-get update -y  > /dev/null
        sudo apt-get install -y g++-8
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8
        sudo update-alternatives --config gcc
      condition: eq( variables['Agent.OS'], 'Linux' )
      displayName: 'Install gcc-8 and g++-8 on Linux'

    - script: |
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev
      condition: eq( variables['Agent.OS'], 'Linux' )
      displayName: 'Install dev files of gtk and webkit on Linux'


    - script: |
        brew install cmake
      condition: eq( variables['Agent.OS'], 'Darwin' )
      displayName: 'Install the up-to-date version of CMake on macOS'

    - script: |
        npm ci
      displayName: 'npm ci'

    - bash: |
        echo CMake configuring
        cmake -G '$(cmakeGenerator)' -DCMAKE_BUILD_TYPE=Release -S node -B build
        echo CMake Building
        cmake --build build --config Release
      displayName: 'Build'

    - script: |
        /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 6
      displayName: Start xvfb
      condition: eq(variables['Agent.OS'], 'Linux')

    - script:
        node node/test/start.js $(buildDistPath)
      displayName: 'test'
      env:
        DISPLAY: ':99.0'
