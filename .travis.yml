language: node_js
node_js:
  - 12

jobs:
  include:
    - os: linux
      dist: xenial
      env:
        - DG_CMAKE_GENERATOR="Unix Makefiles"
        - DG_DIST_PATH="build/Release"
      services:
        - xvfb

    - os: osx
      osx_image: xcode11.2
      env:
        - DG_CMAKE_GENERATOR="Unix Makefiles"
        - DG_DIST_PATH="build"

before_install:
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo rm -rf /usr/local/bin/cmake*
      sudo rm -rf /usr/local/bin/ctest*
      sudo rm -rf /usr/local/doc/cmake
      sudo rm -rf /usr/local/man/man1/cmake*
      sudo rm -rf /usr/local/man/man1/ctest*
      sudo rm -rf /usr/local/man/man7/cmake*
      sudo rm -rf /usr/local/share/cmake*

      sudo apt-get install -y apt-transport-https ca-certificates gnupg software-properties-common wget
      wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
      sudo apt-add-repository -y 'deb https://apt.kitware.com/ubuntu/ xenial main'
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get -q update
      
      sudo apt-get install -y cmake libgtk-3-dev libwebkit2gtk-4.0-dev g++-8
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8
      sudo update-alternatives --config gcc
    fi
    
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew install cmake
    fi
    
install:
  - |
    npm ci
    cmake -G "$DG_CMAKE_GENERATOR" -DCMAKE_BUILD_TYPE=Release -S node -B build
    cmake --build build --config Release
    
script: node node/test/start.js $DG_DIST_PATH
